<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bruno.Ai - Est√∫dio de Imagem</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        :root {
            --bg-primary: #121212;
            --bg-secondary: #1E1E1E;
            --bg-tertiary: #2a2a2a;
            --accent-primary: #6366F1; /* Indigo-500 */
            --accent-hover: #4F46E5; /* Indigo-600 */
            --text-primary: #E0E0E0;
            --text-secondary: #A0A0A0;
            --border-color: #3a3a3a;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }

        .main-container {
            display: grid;
            grid-template-columns: 420px 1fr;
            gap: 1.5rem;
            height: 100vh;
            padding: 1.5rem;
        }

        @media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 1fr;
                height: auto;
            }
        }

        .control-panel, .artwork-panel {
            background-color: var(--bg-secondary);
            border-radius: 1rem;
            border: 1px solid var(--border-color);
            height: calc(100vh - 3rem);
        }
        
        .control-panel {
            padding: 2rem;
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            overflow-y: auto;
        }

        .artwork-panel {
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
            box-shadow: 0 0 30px rgba(0,0,0,0.2);
        }

        @media (max-width: 1024px) {
            .control-panel, .artwork-panel {
                height: auto;
            }
            .artwork-panel {
                 height: 70vh;
                 min-height: 400px;
            }
        }

        .brand-header h1 {
            background: linear-gradient(90deg, #a78bfa, #f472b6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .tab-button {
            transition: all 0.2s ease-in-out;
            color: var(--text-secondary);
        }
        .tab-button.active {
            background-color: var(--accent-primary);
            color: white;
            box-shadow: 0 2px 10px rgba(99, 102, 241, 0.3);
        }

        #prompt {
            background-color: var(--bg-tertiary);
            border: 1px solid var(--border-color);
            transition: all 0.2s ease-in-out;
        }
        #prompt:focus {
            border-color: var(--accent-primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
        }

        .cta-button {
            background: linear-gradient(90deg, var(--accent-primary), #818cf8);
            transition: all 0.3s ease-in-out;
            box-shadow: 0 4px 15px rgba(99, 102, 241, 0.2);
            border: none;
        }
        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(99, 102, 241, 0.4);
        }
        .cta-button:disabled {
            background: var(--bg-tertiary);
            box-shadow: none;
            transform: translateY(0);
        }

        .edit-tool-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 0.75rem;
        }

        .edit-tool-button {
            background-color: var(--bg-tertiary);
            border-radius: 0.5rem;
            padding: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: var(--text-primary);
            transition: all 0.2s ease-in-out;
            border: 1px solid transparent;
        }
        .edit-tool-button:hover {
            background-color: #333;
            border-color: var(--border-color);
        }
        .edit-tool-button svg {
            width: 1.25rem;
            height: 1.25rem;
            color: var(--text-secondary);
        }
        
        .spinner {
            border: 4px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            border-top: 4px solid #ffffff;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .generated-image-actions {
            position: absolute;
            bottom: 1.5rem;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 0.75rem;
            background-color: rgba(18, 18, 18, 0.7);
            padding: 0.5rem;
            border-radius: 9999px;
            backdrop-filter: blur(10px);
            border: 1px solid var(--border-color);
        }
        .action-button {
             background-color: var(--bg-tertiary);
             color: var(--text-primary);
             border: 1px solid var(--border-color);
             border-radius: 9999px;
             padding: 0.6rem 1.25rem;
             display: flex;
             align-items: center;
             gap: 0.5rem;
             cursor: pointer;
             transition: all 0.2s ease;
             font-weight: 500;
        }
        .action-button:hover {
            background-color: #333;
            border-color: var(--text-secondary);
        }
        .action-button svg {
             transition: transform 0.2s;
        }
        .action-button:hover svg {
            transform: scale(1.1);
        }
    </style>
</head>
<body>

    <div class="main-container">
        <!-- Painel de Controle Esquerdo -->
        <div class="control-panel">
            <header class="text-center brand-header">
                <h1 class="text-3xl font-extrabold">Bruno.Ai</h1>
                <p class="text-sm text-gray-400">Seu Est√∫dio de Arte IA üßë‚Äçüé®</p>
            </header>

            <!-- Abas -->
            <div class="flex bg-gray-900/50 p-1 rounded-lg">
                <button id="createTabButton" class="tab-button active w-1/2 py-2 rounded-md font-semibold">Criar</button>
                <button id="editTabButton" class="tab-button w-1/2 py-2 rounded-md font-semibold">Editar</button>
            </div>

            <!-- Conte√∫do da Aba Criar -->
            <div id="createTabContent">
                <div class="space-y-6">
                    <div>
                        <label for="prompt" class="font-semibold text-gray-300">üí° Descreva sua ideia</label>
                        <textarea id="prompt" rows="6" class="mt-2 w-full rounded-lg p-3 text-white focus:ring-2 focus:ring-indigo-500 focus:outline-none" placeholder="Ex: Um le√£o majestoso usando uma coroa, ilumina√ß√£o de est√∫dio, hiper-realista..."></textarea>
                    </div>
                    <button id="generateBtn" class="w-full cta-button text-white font-bold py-3 px-4 rounded-lg flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"/><path d="M5 3v4"/><path d="M19 17v4"/><path d="M3 5h4"/><path d="M17 19h4"/></svg>
                        <span>Gerar Imagem</span>
                    </button>
                </div>
            </div>

            <!-- Conte√∫do da Aba Editar -->
            <div id="editTabContent" class="hidden">
                 <div id="editToolsView">
                    <div class="edit-tool-grid">
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z" /><path fill-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clip-rule="evenodd" /></svg><span>Prompt</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zm-.464 5.535a.75.75 0 01.018-1.042 3.5 3.5 0 00-4.908 0 .75.75 0 01-1.06 1.06 5 5 0 017.072 0 .75.75 0 01-1.042-.018z" clip-rule="evenodd" /></svg><span>Adesivos</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 3.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM6.5 6.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM13.5 6.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM10 13a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM3.5 10a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM16.5 10a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM10 16.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM13.5 13.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM6.5 13.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z" /></svg><span>Logo</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M11.983 1.904a.75.75 0 00-1.292-.752l-5.18 9.064a.75.75 0 00.646 1.138h3.351a.75.75 0 01.565.344l-1.879 2.818a.75.75 0 001.292.752l5.18-9.064a.75.75 0 00-.646-1.138h-3.35a.75.75 0 01-.566-.345l1.88-2.818z" /><path d="M12.973 17.81a.75.75 0 100-1.5.75.75 0 000 1.5zM15.473 14.31a.75.75 0 100-1.5.75.75 0 000 1.5zM17.973 10.81a.75.75 0 100-1.5.75.75 0 000 1.5z" /></svg><span>HQ</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" /></svg><span>Adicionar</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M15.293 2.293a1 1 0 011.414 0l2 2a1 1 0 010 1.414l-2 2a1 1 0 11-1.414-1.414L16.586 5H4a1 1 0 010-2h12.586l-1.293-1.293a1 1 0 010-1.414zM4.707 10.293a1 1 0 010 1.414l-2 2a1 1 0 01-1.414 0l-2-2a1 1 0 111.414-1.414L2.414 12H15a1 1 0 110 2H2.414l1.293 1.293a1 1 0 01-1.414 1.414l-2-2a1 1 0 010-1.414l2-2a1 1 0 011.414 0z" clip-rule="evenodd" /></svg><span>Retocar</span></button>
                        <button class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 2a.75.75 0 01.75.75v1.516a3.5 3.5 0 012.31 2.31h1.516a.75.75 0 010 1.5h-1.516a3.5 3.5 0 01-2.31 2.31v1.516a.75.75 0 11-1.5 0v-1.516a3.5 3.5 0 01-2.31-2.31H4.25a.75.75 0 010-1.5h1.516a3.5 3.5 0 012.31-2.31V2.75A.75.75 0 0110 2zM3.5 4.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM3 12.5a.5.5 0 01.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm.5 3.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM10 17.5a.5.5 0 01.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zm3-3.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zM16.5 12h1a.5.5 0 010 1h-1a.5.5 0 010-1zm-3.5-3.5a.5.5 0 00-1 0v1a.5.5 0 001 0v-1zm3.5-3h1a.5.5 0 010 1h-1a.5.5 0 010-1z" clip-rule="evenodd" /></svg><span>Estilo</span></button>
                        <button id="mergeBtn" class="edit-tool-button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M10 3a1 1 0 011 1v1.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 111.414-1.414L9 5.586V4a1 1 0 011-1z" /><path d="M3.25 9.75a.75.75 0 01.75-.75h12a.75.75 0 010 1.5h-12a.75.75 0 01-.75-.75zM10 17a1 1 0 01-1-1v-1.586l-1.293 1.293a1 1 0 11-1.414-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 11-1.414 1.414L11 14.414V16a1 1 0 01-1 1z" /></svg><span>Mesclar</span></button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Painel de Arte Direito -->
        <div class="artwork-panel p-4">
            <div id="artworkPlaceholder" class="text-center text-gray-500">
                <svg class="mx-auto h-24 w-24 opacity-50" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
                </svg>
                <p class="mt-4 text-lg font-semibold">Sua arte aparecer√° aqui</p>
            </div>
            <div id="artworkLoading" class="hidden text-center">
                <div class="spinner"></div>
                <p class="mt-4 text-lg font-semibold">Gerando sua imagem...</p>
            </div>
            <div id="artworkResult" class="hidden w-full h-full">
                 <img id="generatedImage" src="" alt="Arte gerada" class="w-full h-full object-contain rounded-lg">
                 <div id="imageActions" class="generated-image-actions">
                     <button class="action-button" id="editImageBtn"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"/><path d="m15 5 4 4"/></svg>Editar</button>
                     <button class="action-button" id="downloadBtn"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="7 10 12 15 17 10"/><line x1="12" x2="12" y1="15" y2="3"/></svg>Baixar</button>
                     <button class="action-button" id="newImageBtn"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3c-1.8 0-3.6.6-5 1.7l-3.3-1-1.2 2.1 3.1 1.2C3.2 8.8 2 12 2 15.6a10 10 0 0 0 20 0c0-5.5-4.5-10-10-10zM21.5 12H16c0-2.8 2.2-5 5-5v5z"/></svg>Nova Imagem</button>
                 </div>
            </div>
        </div>
    </div>

    <script>
        // Elementos DOM
        const createTabButton = document.getElementById('createTabButton');
        const editTabButton = document.getElementById('editTabButton');
        const createTabContent = document.getElementById('createTabContent');
        const editTabContent = document.getElementById('editTabContent');
        const mergeBtn = document.getElementById('mergeBtn');
        const generateBtn = document.getElementById('generateBtn');
        const promptInput = document.getElementById('prompt');
        const artworkPlaceholder = document.getElementById('artworkPlaceholder');
        const artworkLoading = document.getElementById('artworkLoading');
        const artworkResult = document.getElementById('artworkResult');
        const generatedImage = document.getElementById('generatedImage');
        const downloadBtn = document.getElementById('downloadBtn');
        const newImageBtn = document.getElementById('newImageBtn');
        const editImageBtn = document.getElementById('editImageBtn');

        // --- Gerenciamento de Abas/Visualiza√ß√£o ---
        function showCreateTab() {
            createTabButton.classList.add('active');
            editTabButton.classList.remove('active');
            createTabContent.classList.remove('hidden');
            editTabContent.classList.add('hidden');
        }
        function showEditTab() {
            createTabButton.classList.remove('active');
            editTabButton.classList.add('active');
            createTabContent.classList.add('hidden');
            editTabContent.classList.remove('hidden');
        }
        createTabButton.addEventListener('click', showCreateTab);
        editTabButton.addEventListener('click', showEditTab);
        
        // --- Gerenciamento de Estado ---
        function showLoading() {
            artworkPlaceholder.classList.add('hidden');
            artworkResult.classList.add('hidden');
            artworkLoading.classList.remove('hidden');
            generateBtn.disabled = true;
            generateBtn.classList.add('opacity-50', 'cursor-not-allowed');
            generateBtn.querySelector('span').textContent = 'Gerando...';
        }

        function showResult(base64Data) {
            const imageUrl = `data:image/png;base64,${base64Data}`;
            generatedImage.src = imageUrl;
            downloadBtn.onclick = () => downloadImage(imageUrl);
            artworkLoading.classList.add('hidden');
            artworkPlaceholder.classList.add('hidden');
            artworkResult.classList.remove('hidden');
            resetGenerateButton();
        }

        function showPlaceholder() {
            artworkLoading.classList.add('hidden');
            artworkResult.classList.add('hidden');
            artworkPlaceholder.classList.remove('hidden');
            resetGenerateButton();
        }

        function resetGenerateButton() {
             generateBtn.disabled = false;
             generateBtn.classList.remove('opacity-50', 'cursor-not-allowed');
             generateBtn.querySelector('span').textContent = 'Gerar Imagem';
        }
        
        function showError(message) {
            console.error(message);
            alert(`Ocorreu um erro: ${message}. Verifique o console para mais detalhes.`);
            showPlaceholder();
        }

        newImageBtn.addEventListener('click', () => {
             showPlaceholder();
             promptInput.value = '';
             showCreateTab();
        });

        editImageBtn.addEventListener('click', showEditTab);

        // --- Chamada da API de Gera√ß√£o de Imagem ---
        async function generateImage() {
            const userPrompt = promptInput.value.trim();
            if (!userPrompt) {
                alert("Por favor, descreva sua ideia na caixa de texto.");
                return;
            }
            showLoading();
            
            // IMPORTANTE: Em uma aplica√ß√£o real, a chave da API deve ser manuseada de forma segura
            // e n√£o exposta no lado do cliente. Para este exemplo, deixamos em branco,
            // pois o ambiente a fornecer√°.
            const apiKey = "";
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;

            const payload = {
                instances: [{ prompt: userPrompt }],
                parameters: { "sampleCount": 1 }
            };

            try {
                // Implementa√ß√£o de nova tentativa com backoff exponencial
                let response;
                let retries = 3;
                let delay = 1000;

                for (let i = 0; i < retries; i++) {
                    response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });
                    if (response.ok) {
                        break; // Sucesso, sair do loop
                    }
                    if (response.status === 429 || response.status >= 500) {
                        // Se for erro de 'rate limit' ou erro de servidor, esperar e tentar novamente
                        console.warn(`Tentativa ${i + 1} falhou com status ${response.status}. Tentando novamente em ${delay / 1000}s...`);
                        await new Promise(resolve => setTimeout(resolve, delay));
                        delay *= 2; // Dobrar o atraso
                    } else {
                        // Para outros erros (ex: 400 Bad Request), n√£o tentar novamente
                        break;
                    }
                }

                if (!response.ok) {
                    const errorBody = await response.json();
                    throw new Error(`A requisi√ß√£o da API falhou com status ${response.status}: ${errorBody.error.message}`);
                }
                const result = await response.json();
                if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {
                    showResult(result.predictions[0].bytesBase64Encoded);
                } else {
                    // Se a resposta for bem-sucedida mas n√£o contiver a imagem, pode ser devido a filtros de seguran√ßa.
                    console.warn("Resposta da API recebida, mas sem dados de imagem.", result);
                    throw new Error("A imagem n√£o p√¥de ser gerada, possivelmente devido a filtros de seguran√ßa. Tente um prompt diferente.");
                }
            } catch (error) {
                showError(error.message);
            }
        }

        generateBtn.addEventListener('click', generateImage);

        // --- Fun√ß√µes Utilit√°rias ---
        function downloadImage(imageUrl) {
            const link = document.createElement('a');
            link.href = imageUrl;
            link.download = `bruno-ai-arte-${Date.now()}.png`;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>

</body>
</html>

